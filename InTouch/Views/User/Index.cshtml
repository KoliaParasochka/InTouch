@using ProjectDb.Entities
@model Message
@{
    ViewBag.Title = "Index";
}

<div class="container" id="vue">
    <h3>@ViewBag.Person.Name @ViewBag.Person.LastName</h3>
    <hr class="line"/>
    <div class="">
        @using (Html.BeginForm("SendMessage", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            <div class="col-md-8">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            <textarea placeholder="Введите ваше сообщение..." class="form-control" id="Text" name="Text" v-model="message"></textarea>
                            <span :class="{'text-danger': IsError}">{{error}}</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <input :disabled="IsError" type="submit" class="btn btn-primary" value="Отправить" />
                    </div>
                    <div class="col-md-10">
                        <div class="col-md-2">
                            <div v-on:click="showStickers" class="btn btn-success">Стикеры</div>
                        </div>
                        <div class="col-md-10" v-show="stickers">
                            
                                @foreach (var sticker in ViewBag.Stickers)
                                {
                                    <label class="border-l">
                                        <input type="checkbox" name="path" class="left" value="@sticker.Path" />
                                        <img src="@Url.Content(sticker.Path)" class="small-img" />
                                    </label>
                                }
                                <div v-on:click="closeStickers" class="close-btn close">x</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                 <input type="file" name="upload" /><br>
            </div>
        }

    </div>
   
    
    <div class="messages">
        <div class="col-md-11">
            <p>{{message}}</p>
        </div>
        @foreach (var el in ViewBag.Messages)
        {
            if (string.IsNullOrEmpty(el.Path))
            {
                <div class="col-md-11">
                    <p>
                        @el.Text
                    </p>
                </div>
            }
            else
            {
                if (el.IsImg)
                {
                    <div class="col-md-11">
                        <img class="img-size" src="@Url.Content(el.Path)" />
                    </div>
                }
                else
                {
                    <div class="col-md-11">
                        @using(Html.BeginForm("DownloadFile", "User", FormMethod.Get))
                        {
                            <input type="hidden" name="filePath" value="@el.Path" />
                            <button class="btn-download clear"><img src="~/Content/Images/Icons/Document.png" class="img-size"/></button>
                            <span class="left clear"><b>@el.FileName</b></span>
                        }
                    </div>
                }

            }

            if (ViewBag.Time < el.TimeToDelete)
            {
                <div class="col-md-1">
                    @using (Html.BeginForm("DeleteMessage", "User", FormMethod.Post))
                    {
                        <input type="hidden" name="id" value="@el.Id" />
                        <input type="submit" value="Удалить" class="btn btn-danger" />
                    }
                </div>
            }
            <br />
        }
    </div>


</div>


<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

<script type="text/javascript">
    var app = new Vue({
        el: '#vue',
        data: {
            message: '', 
            error: '',
            IsError: false,
            stickers: 0
        },
        watch: {
            message: function () {
                if (this.message.length > 300) {
                    this.error = 'Количество символов больше 300!';
                    this.IsError = true;
     
                }
                if (this.message.length < 300) {
                    this.error = '';
                    this.IsError = false;
                }
            }
        },
        methods: {
            showStickers: function () {
                this.stickers = 1;
            },
            closeStickers: function () {
                this.stickers = 0;
            }
        }

    });

</script>